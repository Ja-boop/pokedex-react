{"version":3,"sources":["components/header/logo/logo.svg","components/header/Header.js","pokeapi.js","hooks/services/getPokemonData.js","hooks/useSimpleFetch.js","CacheContext.js","hooks/useFetchWithCache.js","components/pokemonSearch/PokemonSearch.js","components/pokemonSearch/Pokemon.js","App.js","index.js"],"names":["Header","Fragment","className","href","src","logo","alt","getResource","resourceUrl","a","fetch","response","ok","Error","json","pokeapi","searchPokemon","url","getEachPokemonData","getPokemonById","id","getPokemonTypes","resource","POKEMON_TYPES","i","types","length","type","push","getPokemonAbilities","POKEMON_ABILITIES","abilities","ability","abilitie","getEvoChain","species","evolution_chain","evolutionChain","POKEMON_EVOLUTION_CHAIN","chain","name","firstChain","secondChain","thirdChain","evolves_to","initialState","loading","data","error","fetchReducer","state","action","payload","CacheContext","createContext","displayName","cacheReducer","key","value","CacheProvider","children","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","serializedState","stringify","setItem","Provider","SearchBar","props","onChange","PokemonSearch","useState","searchTerm","setSearchTerm","fetchResource","fetchIdResource","param","timeout","cache","useContext","timeoutId","setTimeout","pokemones","filterPokemones","results","filter","pokemon","includes","slicePokemones","slice","clearTimeout","useDebouncedFetch","icon","faSearch","e","target","toLowerCase","match","map","result","sprites","other","front_default","width","height","to","order","POKEMON_TIPOS","insertDecimal","num","toFixed","Pokemon","useParams","POKEMON_DATA","tipos","habilidades","evoluciones","FetchOnlyId","weight","tipo","names","habilidad","activeIndex","threshHold","transition","scaleOnDrag","evolucion","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.393f9d06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2b9a0803.svg\";","import React from 'react';\r\nimport './header.css';\r\nimport logo from './logo/logo.svg'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"logo-container\">\r\n            <a href=\"/home\">\r\n                <img className=\"logo\" src={logo} alt=\"pokedex\" ></img>\r\n            </a>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","const BASE_URL = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=9000';\r\n\r\nconst getResource = async (resourceUrl) => {\r\n    const response = await fetch(resourceUrl);\r\n    if(!response.ok) {\r\n        throw new Error('API Error');\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nconst pokeapi = {\r\n    searchPokemon: (url) => \r\n        getResource(url || BASE_URL),\r\n    getEachPokemonData: (url) => getResource(url),\r\n    getPokemonById: (id) => getResource(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n};\r\n\r\nexport default pokeapi;\r\n","async function getPokemonTypes(getResource, resource) {\r\n    const POKEMON_TYPES = [];\r\n\r\n    for (let i = 0; i < resource.types.length; i++) {\r\n        const type = await getResource(resource.types[i].type.url);\r\n        POKEMON_TYPES.push(type)\r\n    }\r\n\r\n    return POKEMON_TYPES;\r\n}\r\n\r\nasync function getPokemonAbilities(getResource, resource) {\r\n    const POKEMON_ABILITIES = [];\r\n\r\n    for (let i = 0; i < resource.abilities.length; i++) {\r\n        const abilitie = await getResource(resource.abilities[i].ability.url);\r\n        POKEMON_ABILITIES.push(abilitie);\r\n    }\r\n\r\n    return POKEMON_ABILITIES;\r\n}\r\n\r\nasync function getEvoChain(getResource, resource) {\r\n    const species = await getResource(resource.species.url);\r\n    const evolutionChain = await getResource(species.evolution_chain.url);\r\n\r\n    const POKEMON_EVOLUTION_CHAIN = [];\r\n    const firstChain = await getResource(`https://pokeapi.co/api/v2/pokemon/${evolutionChain.chain.species.name}`);\r\n    let secondChain = [];\r\n    let thirdChain = [];\r\n\r\n    POKEMON_EVOLUTION_CHAIN.push(firstChain)\r\n\r\n    if (evolutionChain.chain.evolves_to.length > 0) {\r\n        secondChain = await getResource(`https://pokeapi.co/api/v2/pokemon/${evolutionChain.chain.evolves_to[0].species.name}`)\r\n        POKEMON_EVOLUTION_CHAIN.push(secondChain)\r\n\r\n        if (evolutionChain.chain.evolves_to[0].evolves_to.length > 0) {\r\n            thirdChain = await getResource(`https://pokeapi.co/api/v2/pokemon/${evolutionChain.chain.evolves_to[0].evolves_to[0].species.name}`)\r\n            POKEMON_EVOLUTION_CHAIN.push(thirdChain)\r\n        }\r\n    }\r\n\r\n    return POKEMON_EVOLUTION_CHAIN;\r\n}\r\n\r\nexport { getPokemonTypes, getPokemonAbilities, getEvoChain };","import { useState, useEffect, useReducer } from \"react\";\r\nimport { getPokemonTypes, getPokemonAbilities, getEvoChain } from './services/getPokemonData.js';\r\n\r\nexport const useFetchOnChange = (fetchResource, fetchIdResource, param, timeout) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(async () => {\r\n            if (param) {\r\n                setLoading(true);\r\n                setError(null);\r\n                setData(null);\r\n\r\n                try {\r\n                    let pokemones = [];\r\n                    const resource = await fetchResource();\r\n                    const filterPokemones = resource.results.filter(pokemon => {\r\n                        return pokemon.name.includes(param)\r\n                    })\r\n\r\n                    const slicePokemones = filterPokemones.slice(0, 15);\r\n\r\n                    for (let i = 0; i < slicePokemones.length; i++) {\r\n                        pokemones.push(await fetchIdResource(filterPokemones[i].url))\r\n                    }\r\n\r\n                    setData(pokemones);\r\n                } catch (error) {\r\n                    setError(error);\r\n                }\r\n\r\n                setLoading(false)\r\n            } else {\r\n                setData(null);\r\n                setError(null);\r\n            }\r\n        }, timeout);\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        };\r\n    }, [fetchResource, fetchIdResource, param, timeout]);\r\n\r\n    return { data, error, loading };\r\n};\r\n\r\n// REDUCER\r\n\r\nconst initialState = { loading: false, data: null, error: null };\r\n\r\nconst fetchReducer = (state, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case 'INITIAL':\r\n            return { ...state, loading: false, data: null, error: null };\r\n        case 'LOAD':\r\n            return { ...state, loading: true, data: null, error: null };\r\n        case 'SUCCESS':\r\n            return { ...state, loading: false, data: payload, error: null };\r\n        case 'FAILURE':\r\n            return { ...state, loading: false, data: null, error: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useFetchReducer = (fetchResource, fetchIdResource, param, timeout) => {\r\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(async () => {\r\n            if (param) {\r\n                dispatch({ type: 'LOAD' });\r\n                try {\r\n                    let pokemones = [];\r\n                    const resource = await fetchResource();\r\n                    const filterPokemones = resource.results.filter(pokemon => {\r\n                        return pokemon.name.includes(param)\r\n                    })\r\n\r\n                    const slicePokemones = filterPokemones.slice(0, 15);\r\n\r\n                    for (let i = 0; i < slicePokemones.length; i++) {\r\n                        pokemones.push(await fetchIdResource(filterPokemones[i].url))\r\n                    }\r\n\r\n                    dispatch({ type: 'SUCCESS', payload: pokemones });\r\n                } catch (error) {\r\n                    dispatch({ type: 'FAILURE', payload: error });\r\n                }\r\n            } else {\r\n                dispatch({ type: 'INITIAL' }) // Si pongo initialState, no limpia la pagina al borrar lo escrito en el buscador de pokemones\r\n            }\r\n\r\n        }, timeout);\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [fetchResource, fetchIdResource, param, timeout]);\r\n\r\n    return state;\r\n};\r\n\r\nexport const FetchOnlyId = (getResource, fetchIdResource, param, timeout) => {\r\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(async () => {\r\n            if (param) {\r\n                dispatch({ type: 'LOAD' });\r\n                try {\r\n                    const resource = await fetchIdResource(param);\r\n                    const POKEMON_DATA = {\r\n                        resource,\r\n                        tipos: await getPokemonTypes(getResource, resource),\r\n                        habilidades: await getPokemonAbilities(getResource, resource),\r\n                        evoluciones: await getEvoChain(getResource, resource),\r\n                    }\r\n\r\n                    dispatch({ type: 'SUCCESS', payload: POKEMON_DATA });\r\n                } catch (error) {\r\n                    dispatch({ type: 'FAILURE', payload: error });\r\n                }\r\n            } else {\r\n                dispatch({ type: 'INITIAL' })\r\n            }\r\n\r\n        }, timeout);\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [getResource, fetchIdResource, param, timeout]);\r\n\r\n    return state;\r\n};\r\n\r\n","import React, { useEffect, useReducer, createContext } from \"react\";\r\n\r\nexport const CacheContext = createContext();\r\nCacheContext.displayName = 'Cache';\r\n\r\nconst cacheReducer = (state, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case 'SET_CACHE':\r\n            return {\r\n                ...state,\r\n                [payload.key]: payload.value,\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport function CacheProvider({ children }) {\r\n    const [state, dispatch] = useReducer(\r\n        cacheReducer,\r\n        JSON.parse(localStorage.getItem('POKEAPI_CACHE')) || {},\r\n    );\r\n\r\n    useEffect(() => {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('POKEAPI_CACHE', serializedState);\r\n    }, [state]);\r\n\r\n    return <CacheContext.Provider value={{ state, dispatch }}>{children}</CacheContext.Provider>;\r\n};\r\n","import { useEffect, useReducer, useContext } from 'react';\r\nimport { CacheContext } from '../CacheContext';\r\n\r\nconst initialState = { loading: false, data: null, error: null };\r\n\r\nconst fetchReducer = (state, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case 'INITIAL':\r\n            return { ...state, loading: false, data: null, error: null };\r\n        case 'LOAD':\r\n            return { ...state, loading: true, data: null, error: null };\r\n        case 'SUCCESS':\r\n            return { ...state, loading: false, data: payload, error: null };\r\n        case 'FAILURE':\r\n            return { ...state, loading: false, data: null, error: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useDebouncedFetch = (fetchResource, fetchIdResource, param, timeout) => {\r\n    const cache = useContext(CacheContext);\r\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        if (cache.state[param]) {\r\n            dispatch({ type: 'SUCCESS', payload: cache.state[param] });\r\n            return;\r\n        };\r\n\r\n        const timeoutId = setTimeout(async () => {\r\n            if (param) {\r\n                dispatch({ type: 'LOAD' });\r\n                try {\r\n                    let pokemones = [];\r\n                    const resource = await fetchResource();\r\n                    const filterPokemones = resource.results.filter(pokemon => {\r\n                        return pokemon.name.includes(param)\r\n                    })\r\n\r\n                    const slicePokemones = filterPokemones.slice(0, 15);\r\n\r\n                    for (let i = 0; i < slicePokemones.length; i++) {\r\n                        pokemones.push(await fetchIdResource(filterPokemones[i].url))\r\n                    }\r\n\r\n                    dispatch({ type: 'SUCCESS', payload: pokemones });\r\n                    cache.dispatch({ type: 'SET_CACHE', payload: { key: param, value: pokemones } });\r\n                } catch (error) {\r\n                    dispatch({ type: 'FAILURE', payload: error });\r\n                }\r\n            } else {\r\n                dispatch({ type: 'INITIAL' }) // Si pongo initialState, no limpia la pagina al borrar lo escrito en el buscador de pokemones\r\n            }\r\n\r\n        }, timeout);\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [fetchResource, cache, fetchIdResource, param, timeout]);\r\n\r\n    return state;\r\n};\r\n\r\nexport function useInstantFetch(fetchResource, fetchIdResource, param) {\r\n    const cache = useContext(CacheContext);\r\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        if (cache.state[param]) {\r\n            dispatch({ type: 'SUCCESS', payload: cache.state[param] });\r\n            return;\r\n        };\r\n\r\n        const fetch = async () => {\r\n            dispatch({ type: 'LOAD' });\r\n            try {\r\n                let pokemones = [];\r\n                const resource = await fetchResource();\r\n                const filterPokemones = resource.results.filter(pokemon => {\r\n                    return pokemon.name.includes(param)\r\n                })\r\n\r\n                const slicePokemones = filterPokemones.slice(0, 15);\r\n\r\n                for (let i = 0; i < slicePokemones.length; i++) {\r\n                    pokemones.push(await fetchIdResource(filterPokemones[i].url))\r\n                }\r\n\r\n                dispatch({ type: 'SUCCESS', payload: pokemones });\r\n                cache.dispatch({ type: 'SET_CACHE', payload: { key: param, value: pokemones } });\r\n            } catch (error) {\r\n                dispatch({ type: 'FAILURE', payload: error });\r\n            }\r\n        };\r\n        fetch();\r\n    }, [param, cache, fetchResource, fetchIdResource]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport './pokemonSearch.css';\r\nimport pokeapi from '../../pokeapi';\r\nimport { useFetchReducer } from '../../hooks/useSimpleFetch';\r\nimport { useDebouncedFetch } from '../../hooks/useFetchWithCache';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SearchBar = (props) => {\r\n    return (\r\n        <input className=\"search-bar\"\r\n            type=\"text\"\r\n            name=\"searchBar\"\r\n            id=\"search-bar\"\r\n            onChange={props.onChange}\r\n        />\r\n    )\r\n}\r\n\r\nconst PokemonSearch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const { data, error, loading } = useDebouncedFetch(pokeapi.searchPokemon, pokeapi.getEachPokemonData, searchTerm, 500);\r\n    let i = 0;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"search-bar-container\">\r\n                <FontAwesomeIcon icon={faSearch} className=\"icon\" />\r\n                <SearchBar onChange={(e) => setSearchTerm(e.target.value.toLowerCase().match(/^[A-Za-z\\-]+/))} value={searchTerm} />\r\n            </div>\r\n            {loading && <p>Cargando</p>}\r\n            {data && (\r\n                <div className=\"wrapper search-results-container\">\r\n\r\n                    {data.map((result) => (\r\n                        <div className={\"pokemon-\" + ++i + \" result-pokemon-container\"} key={result.order}>\r\n                            <img src={result.sprites.other['official-artwork'].front_default || result.sprites.front_default} alt={result.name} width=\"100%\" height=\"100%\" ></img>\r\n\r\n                            <div className=\"result-pokemon-caption\">\r\n                                <NavLink to={`/pokemon/${result.id}`}>\r\n                                    <p>{result.name}</p>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n                </div>\r\n            )}\r\n\r\n            {error && <div>{error}</div>}\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default PokemonSearch;\r\n","import React from 'react';\r\nimport pokeapi from '../../pokeapi';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { FetchOnlyId } from '../../hooks/useSimpleFetch';\r\nimport Slider from 'react-touch-drag-slider';\r\nimport './pokemonSearch.css';\r\nimport './pokemon.css';\r\n\r\nconst POKEMON_TIPOS = {\r\n    'Acero': \"https://static.wikia.nocookie.net/espokemon/images/d/d9/Tipo_acero.gif\",\r\n    'Agua': \"https://static.wikia.nocookie.net/espokemon/images/9/94/Tipo_agua.gif\",\r\n    'Bicho': \"https://static.wikia.nocookie.net/espokemon/images/f/fe/Tipo_bicho.gif\",\r\n    'Dragon': \"https://static.wikia.nocookie.net/espokemon/images/0/01/Tipo_drag%C3%B3n.gif\",\r\n    'Eléctrico': \"https://static.wikia.nocookie.net/espokemon/images/1/1b/Tipo_el%C3%A9ctrico.gif\",\r\n    'Fantasma': \"https://static.wikia.nocookie.net/espokemon/images/4/47/Tipo_fantasma.gif\",\r\n    'Fuego': \"https://static.wikia.nocookie.net/espokemon/images/c/ce/Tipo_fuego.gif\",\r\n    'Hada': \"https://static.wikia.nocookie.net/espokemon/images/b/bc/Tipo_hada.gif\",\r\n    'Hielo': \"https://static.wikia.nocookie.net/espokemon/images/4/40/Tipo_hielo.gif\",\r\n    'Lucha': \"https://static.wikia.nocookie.net/espokemon/images/b/b7/Tipo_lucha.gif\",\r\n    'Normal': \"https://static.wikia.nocookie.net/espokemon/images/3/32/Tipo_normal.gif\",\r\n    'Planta': \"https://static.wikia.nocookie.net/espokemon/images/d/d6/Tipo_planta.gif\",\r\n    'Psíquico': \"https://static.wikia.nocookie.net/espokemon/images/1/15/Tipo_ps%C3%ADquico.gif\",\r\n    'Roca': \"https://static.wikia.nocookie.net/espokemon/images/e/e0/Tipo_roca.gif\",\r\n    'Siniestro': \"https://static.wikia.nocookie.net/espokemon/images/8/82/Tipo_siniestro.gif\",\r\n    'Tierra': \"https://static.wikia.nocookie.net/espokemon/images/1/1d/Tipo_tierra.gif\",\r\n    'Veneno': \"https://static.wikia.nocookie.net/espokemon/images/1/10/Tipo_veneno.gif\",\r\n    'Volador': \"https://static.wikia.nocookie.net/espokemon/images/e/e1/Tipo_volador.gif\",\r\n    '???': \"https://static.wikia.nocookie.net/espokemon/images/5/5d/Tipo_%3F%3F%3F.gif\",\r\n}\r\n\r\nfunction insertDecimal(num) {\r\n    return (num / 10).toFixed(1);\r\n}\r\n\r\nconst Pokemon = () => {\r\n    const { id } = useParams();\r\n    const { data, error, loading } = FetchOnlyId(pokeapi.searchPokemon, pokeapi.getPokemonById, id, 500);\r\n\r\n    if (loading) return <p>Cargando</p>;\r\n\r\n    if (error) return 'Something went wrong';\r\n\r\n    if (data)\r\n        return (\r\n            <>\r\n                <div className=\"results-container\">\r\n\r\n\r\n                    <div className=\"pokemon-div\">\r\n                        <div className=\"result-pokemon-container pokemon-photo-container\">\r\n                            <img className=\"pokemon-img\" src={data.resource.sprites.other['official-artwork'].front_default || data.resource.sprites.front_default} alt={data.resource.name} ></img>\r\n                            <div className=\"result-pokemon-caption\">\r\n                                <p>{data.resource.name} N°{data.resource.id}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"pokemon-divtwo\">\r\n\r\n                        <div className=\"result-pokemon-container pokemon-data-container\">\r\n                            <div className=\" pokemon-body-container\">\r\n                                <div className=\"pokemon-info pokemon-body-info\">\r\n                                    <span>Altura: {insertDecimal(data.resource.height)} m</span>\r\n\r\n                                    <span>Peso: {insertDecimal(data.resource.weight)} kg</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"pokemon-types-container\">\r\n                                <div className=\"pokemon-types\">\r\n                                    {data.tipos.map(tipo => (\r\n                                        <img className=\"type-img\" src={POKEMON_TIPOS[tipo.names[4].name]} alt={tipo.names[4].name} key={tipo.id} />\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"result-pokemon-container pokemon-data-container\">\r\n\r\n                            <h2 className=\"section-title\" >Habilidades</h2>\r\n                            <div className=\"pokemon-body-container\">\r\n                                <div className=\"pokemon-info pokemon-body-info\">\r\n\r\n\r\n                                    {data.habilidades.map(habilidad => (\r\n                                        <span key={habilidad.id} >{habilidad.names[5].name}</span>\r\n                                    ))}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <h1 className=\"section-title\" >Evoluciones</h1>\r\n                <div className=\"result-pokemon-container slide-container\">\r\n\r\n                    <Slider\r\n                        activeIndex={0}\r\n                        threshHold={100}\r\n                        transition={0.5}\r\n                        scaleOnDrag={false}\r\n                    >\r\n                        {data.evoluciones.map(evolucion => (\r\n                            <div className=\"slide-caption-image\" key={evolucion.id}>\r\n                                <img src={evolucion.sprites.other['official-artwork'].front_default || evolucion.sprites.front_default} key={evolucion.id} alt={evolucion.name} />\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n\r\n                </div>\r\n\r\n                <div className=\"evolutions-container\">\r\n                    {data.evoluciones.map(evolucion => (\r\n                        <div className=\"result-pokemon-container\" key={evolucion.id} >\r\n                            <img className=\"evolution-img\" src={evolucion.sprites.other['official-artwork'].front_default || evolucion.sprites.front_default} key={evolucion.id} alt={evolucion.name} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    return null;\r\n\r\n\r\n};\r\n\r\nexport default Pokemon;\r\n","import './App.css';\nimport Header from './components/header/Header'\nimport PokemonSearch from './components/pokemonSearch/PokemonSearch';\nimport Pokemon from './components/pokemonSearch/Pokemon';\nimport { CacheProvider } from './CacheContext';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport '../src/components/mediaQueries/mediaQ.css'\n\nfunction App() {\n  return (\n    <CacheProvider>\n      <Router>\n        <div className=\"container\">\n          <Header />\n          <Switch>\n            <Route path={[\"/home\", \"/\"]} exact>\n              <PokemonSearch />\n            </Route>\n            <Route path=\"/pokemon/:id\">\n              <Pokemon />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </CacheProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);"],"sourceRoot":""}